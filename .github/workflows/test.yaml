name: golangci-lint
on:
  push:
jobs:
  repo_ids:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.repo_ids.outputs.REPO_NAME }}
      org_name: ${{ steps.repo_ids.outputs.ORG_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get repository identifiers
        id: repo_ids
        run: |
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          ORG_NAME=$(echo "${{ github.event.repository.owner.name }}" | tr '[:upper:]' '[:lower:]')
          echo "::set-output name=REPO_NAME::$REPO_NAME"
          echo "::set-output name=ORG_NAME::$ORG_NAME"
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: '1.17'
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
  helm-lint:
    runs-on: ubuntu-latest
    needs: [repo_ids]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1
      - name: Run chart-testing (lint)
        run: ct lint --validate-maintainers false --charts helm/${{ needs.repo_ids.outputs.repo_name }}/ --chart-repos bitnami=https://charts.bitnami.com/bitnami
  helm-test:
    runs-on: ubuntu-latest
    needs: [repo_ids]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.17.1'
          kubernetes version: 'v1.19.2'
      - name: Login to minikube docker registry
        run: eval $(minikube -p minikube docker-env)
      - name: Build and Publish image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          load: true
          file: ./Dockerfile
          target: production
          tags: |
            ${{ needs.repo_ids.outputs.repo_name }}:latest
          labels: |
            org.opencontainers.image.title=${{ needs.repo_ids.outputs.repo_name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
      - name: Run chart-testing (install)
        run: ct install --charts helm/${{ needs.repo_ids.outputs.repo_name }}/ --chart-repos bitnami=https://charts.bitnami.com/bitnami  
